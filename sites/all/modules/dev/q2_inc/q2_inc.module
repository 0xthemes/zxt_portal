<?php
 module_load_include('inc', 'q2_inc', 'q2_inc.db');
define('Q2_INC_SERVER_PATH', '/home/drupali');
//temp remove later 
function q2_inc_menu() { 
 $items['direct/print'] = array(
    'page callback' => '_temp_direct_print',
    'access arguments' => TRUE,
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
  ); 
  return $items;
 }

function _temp_direct_print(){
  $design['cssfiles'] = q2_inc_getlib2assets();
  $design['designids'] = array(37);
  //q2_htmlbuilder_home_page();
  print q2_htmlbuilder_home_page($design);
} 
 
//get the design and convert to document folder
function q2_inc_design2doc(array $designs) {
   
}

//get the list of libs and convert to licenses folder
//It creates path inside the 
function q2_inc_libs2lics(array $libs, $path) {
  $path = $path.'/licenses';
  //Create directory
  if(!file_prepare_directory($path)) {
    drupal_mkdir($path,0755, TRUE); 
   }
  //get the list of licenses IDs
  $licenseIDs = array_unique(q2_inc_gettermreferences('field_data_field_license_ref', 'taxonomy_term', 'libraries', $libs, 'field_license_ref_tid'));
  //create file for each licenses
  foreach ($licenseIDs as $licenseID) {
    $term = taxonomy_term_load($licenseID);
    $content = $term->field_code['und']['0']['value'];
    $filename = $path.'/'.$term->field_file_path['und']['0']['safe_value'];
    file_save_data($content,$filename,FILE_EXISTS_REPLACE);
  }
}

//Load the library ids and create the css folders for it
//it creates a merged css file too
function q2_inc_libs2css(array $libs, $path, $folder = '/html/css/libs'){
  $path = $path.$folder;
    
  if(!file_prepare_directory($path)) {
    drupal_mkdir($path,0755, TRUE); 
  }
  $lines = '---------------------------';
  //create separate css folder for 3rd party libs
  $combined = $path.'/mergedallcss.css';
  if(!file_prepare_directory($path)) {
    drupal_mkdir($path,0755, TRUE); 
  }
  
  $cssfiles = array();
  //Get css files for each libraries
  foreach ($libs as $lib ) {
    //get only css files
    //38 = css
    $cssfile = q2_inc_getlib2assets($lib, array(38));
    if($cssfile) {
      $cssfiles[] = $cssfile;
    }
  }
  file_save_data('', $combined, FILE_EXISTS_REPLACE );
  foreach($cssfiles as &$assets) {
    foreach ($assets as &$file) {
      $filename = $path.'/'.$file['filename'];
      file_save_data($file['code'], $filename, FILE_EXISTS_REPLACE );
      
      //combine all the css file content here,
      $contentCombain = PHP_EOL.$lines.$lines.PHP_EOL.' Begin : '.$file['filename'].' '.PHP_EOL.$lines.$lines.PHP_EOL.PHP_EOL;
      $contentCombain .= $file['code'].PHP_EOL.PHP_EOL;
      $contentCombain .= $lines.$lines.PHP_EOL.' End : '.$file['filename'].' '.PHP_EOL.$lines.$lines.PHP_EOL.PHP_EOL;
      file_put_contents($combined, $contentCombain, FILE_APPEND | LOCK_EX);
      //unset the code part of the array, helps to reduce the array size and memory 
      unset($file['code']);
    }  
  }
 
  return $cssfiles;
}

//Load the library ids and create the js folders for it
function q2_inc_libs2js(array $libs, $path, $folder = "/html/js/libs"){
  //create separate css folder for 3rd party libs
  $path = $path.$folder;
  if(!file_prepare_directory($path)) {
    drupal_mkdir($path,0755, TRUE); 
  }
  
  $JSfiles = array();
  //Get JS files for each libraries
  foreach ($libs as $lib ) {
    //get only JS files
    $JSfile = q2_inc_getlib2assets($lib, array(39));
    if($JSfile) {
      $JSfiles[] = $JSfile;
    }
  }
 
  foreach($JSfiles as &$assets) {
    foreach ($assets as &$file) {
      $filename = $path.'/'.$file['filename'];
      file_save_data($file['code'], $filename, FILE_EXISTS_REPLACE );
      //unset the code part of the array, helps to reduce the array size and memory 
      unset($file['code']);
    }  
  }
 
  return $JSfiles;
}

// to be do 
//get the content, add it to files, merge them, return the filepath
function q2_inc_design2filemerge(array $files, $filename, $options = array(),$spliter = "PHP_EOL") {
   //get all 3rd part css files
   //get the file content
   $codes = q2_inc_getcodes($files);
   $filecontent = PHP_EOL;
   foreach($codes as $code) {
     $filecontent .= $code;
	 $filecontent .= PHP_EOL;
   }
   $file = fopen($filename, "w") or die("Unable to open file!");
   fwrite($file, $filecontent);
   fwrite($file, PHP_EOL);
   fclose($file);
}

//query field-collection/field-theme-files
//input : style id, platform term, file type
//output : whole array with codes
//TODO : make sure it loads the FCs same order as it saved, make it SQL to load it faster
function q2_inc_get_style_code($style_id, $platform, $file_type) {
  return views_embed_view('api_get_style_codes', 'php_array_1',$style_id, $platform, $file_type);
}

//query field-collection/field-theme-files
//input : style id, platform term, file type
//output : whole array with images
//TODO : make sure it loads the FCs same order as it saved, make it SQL to load it faster
function q2_inc_get_style_images($style_id, $platform, $file_type) {
  return views_embed_view('api_get_style_images', 'php_array_1',$style_id, $platform, $file_type);
}

//Makes complete array from list of styles
//Images
//libraries [dependencies]
//css
//  external
//  internal
//  contextual 
//js (same like the css)    
//documents
//licenses
//
function q2_inc_make_project_array($styleids = array()) {
  $styles = array();
  $images = array();
  
  $dependencies = array();
  $output = array();
  foreach($styleids as $styleid) {
    $style = node_load($styleid);
    $styles[] = $style; 
    
    //add all the images
    if(isset($style->field_screenshot['und'][0])) {
      $images[] = $style->field_screenshot['und'][0];
    }
    
    //add all the dependent libraries
    if(isset($style->field_lib_dependence['und'])) {
      foreach($style->field_lib_dependence['und'] as $library) {
        $dependencies[] = $library['target_id'];
      }
    }
  }
  $output['images'] = $images;
  $output['dependencies'] = array_unique ($dependencies);
  //return $styles;
  return $output;
}

//Get the style ids as array, filetype, file name, platform
//load the theme FC for those styles and make a single file and return the path  
function q2_inc_makefile_from_theme($styles, $filename = '/main.css', $filetype = array(28 ), $platform = array(12) ){
  $CSSfilecontent = '';
  file_save_data('', $filename, FILE_EXISTS_REPLACE );
  foreach($styles as $style) {
    $stylearray = q2_inc_get_style_code($style, $platform, $filetype);
    foreach ($stylearray as $array) {
      $CSSfilecontent .= $array['code']['0'].PHP_EOL.PHP_EOL;
    }
  }
  return file_put_contents($filename, $CSSfilecontent, FILE_APPEND | LOCK_EX);
}


//Create all the needed css files from design
//todo : create the 
function q2_inc_create_css($designs,$path,$platforms = array(12),$filetypes = array(20,21,22,23,24,34,38), $folder = "/html/css") {
  $return = array();
  $path = $path.$folder;
    
  if(!file_prepare_directory($path)) {
    drupal_mkdir($path,0755, TRUE); 
  }
  //loop the design
  $filetype = implode(",", $filetypes);
  $platform = implode(",", $platforms);
  foreach ($designs as $design) {
    $codes = q2_inc_get_style_code($design, $platform, $filetype);
    foreach($codes as &$code) {
      $filename = $path.'/main.css';//'/css/'.isset($code['filename']['0']) ? $code['filename']['0'] : 'main.css';
      file_put_contents($filename, $code['code']['0'], FILE_APPEND | LOCK_EX);
      unset($code['code']['0']);
      $return[] = $code;
      
    }
  }
  return $return;
    //create the files based on the file name [match the file_type too]
  //return the created array for other processes
  
}

//variable extractory, extracts the variables and its serilised blob as key value array
//todo :everything 
function q2_inc_designs2variables($designs) {
  $variables = array();
  //get all the field collection belogs to this design
  $Fcs = q2_inc_get_fcs($designs);
  if(count($Fcs)) {
    //get the asset id where file type = all major css files
    //80 = drupal variables
    $assetids = q2_inc_filter_fc_by_filetype($Fcs, array(80));
    $variables = q2_inc_getcodes($assetids, 'field_collection_item', 'field_theme_files');
    $return = array();
    foreach ($variables as $vars) {
      $splited = preg_split("/\\r\\n|\\r|\\n/", $vars);
      foreach ($splited as $var) {
        $temp = explode("|",$var);
        $return[$temp[0]] =  $temp[1];
      }
    }
  return $return;
  }
  return FALSE;
   
  
}

//get the file IDs and field name and return the description of it
function q2_inc_get_files_description($fileid , $field_name = 'field_files'){
  $table = 'field_data_'.$field_name;
  $query = db_select($table, 'c');
  //SELECT the fields from node
  $field_file_id = $field_name.'_fid';
  $field_description = $field_name.'_description';
  $query->fields('c',array($field_file_id, $field_description , 'entity_id'))
    ->condition($field_file_id, $fileid)
    ->range(0,1000);//LIMIT to 2 records
  $result = $query->execute();
  $output = array();
  while($record = $result->fetchAssoc()) {
    $output[$record[$field_file_id]] = $record[$field_description] ; 
  }
  return $output;
}

//Move all the style images to a folder
function q2_inc_create_assets_images($designs,$path = '',$platforms = array(12),$filetypes = array(20,21,22,23,24,34,38), $folder = "html/images") {
  $path = $path.'/'.$folder;
  if(!file_prepare_directory($path)) {
    drupal_mkdir($path,0755, TRUE); 
  }
  
  //loop to each design
  $filetype = implode(",", $filetypes);
  $platform = implode(",", $platforms);
  $files = array();
  foreach ($designs as $design){
    $images = q2_inc_get_style_images($design, $platform,$filetype);
    foreach ($images as $image) {
      foreach ($image['files'] as $file) {
        $fileobject = file_load($file);
        $dir_uri = file_stream_wrapper_get_instance_by_uri( $fileobject->uri);
        $filesurl = 'http:'.$dir_uri->getExternalUrl();
        //move each image to the given folder
        if(copy ($filesurl,$path.'/'.$fileobject->filename )) {
          $files[$file]['url'] = $filesurl;
          $files[$file]['filename'] = $fileobject->filename;
          }
        }
    }
  }
  return $files;
 
}

//funtion to move single file from single FC, 
//Get destination path and FCid as input
//Determin file name from filepath
function q2_inc_move_copy_single_file_from_fc($fc,$path) {
    
}

//Create a text file which contains list of image credits
//Get the file path and designs
//return the file path
function q2_inc_FCs_to_imagecredits($FCs, $File) {
  $IC_FCs = q2_inc_filter_fc_by_filetype($FCs , array(116));
  $Codes = q2_inc_getcodes ($IC_FCs );
  $Output = "This file list images and its sources used in this template".PHP_EOL.PHP_EOL.PHP_EOL;
  foreach ($Codes as $code) {
    $Output .= $code.PHP_EOL.PHP_EOL;
  }
  file_put_contents($File, $Output);
  
}

//funtion to get list of fc ids as normail array by getting design id, platform id and filetype id 
//if filetype is zero, return all fcs
function q2_inc_getFCs_of_plugins($design,$platform,$file_type = 0) {
  $FCs_all = q2_inc_get_fcs(array($design));
  $FCs = q2_inc_filter_fc_by_platform($FCs_all, array($platform));
  if($file_type) {
    return q2_inc_filter_fc_by_filetype($FCs , array($file_type));
  }
  else {
    return $FCs;
  }  
}
//same as above but for multiple designs
//todo fully
function q2_inc_getFCs_of_plugins_multiple($designs,$platform,$file_type = 0) {

}


//input : design ID, platform, Fileype
//output : codes
//@todo optimizie it,
//@todo make an FC version instead of load design again and again
function q2_inc_getcodes_from_plugin($design,$platform,$file_type) {
  $FCs = q2_inc_getFCs_of_plugins($design,$platform,$file_type);
  return q2_inc_getcodes($FCs);
}
//same as above but for short descriptions
function q2_inc_get_shortdesc_from_plugin($design,$platform,$file_type) {
  $FCs = q2_inc_getFCs_of_plugins($design,$platform,$file_type);
  return q2_inc_get_text( $FCs,'field_collection_item','field_theme_files', 'field_short_description');
}
//same as above but for file path text field from theme field collections
function q2_inc_get_filepath_from_plugin($design,$platform,$file_type) {
  $FCs = q2_inc_getFCs_of_plugins($design,$platform,$file_type);
  return q2_inc_get_text( $FCs,'field_collection_item','field_theme_files', 'field_file_path');
}

function q2_inc_getstyle_from_fc($FCids){
  $entity = entity_load_single('field_collection_item', $FCids);
  return $entity->hostEntityId();
}